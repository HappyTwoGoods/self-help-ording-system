<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yangnan.selfhelpordingsystem.dao.GoodsDao">
    <resultMap id="Goods" type="com.yangnan.selfhelpordingsystem.entity.GoodsEntity">
        <result column="id" property="id"></result>
        <result column="goods_name" property="name"></result>
        <result column="goods_type" property="type"></result>
        <result column="cook_id" property="cookId"></result>
        <result column="price" property="price"></result>
        <result column="discount" property="discount"></result>
        <result column="goods_limit" property="limit"></result>
        <result column="image" property="image"></result>
        <result column="goods_num" property="goodsNum"></result>
        <result column="goods_describe" property="describe"></result>
        <result column="add_time" property="addTime"></result>
        <result column="update_time" property="updateTime"></result>
    </resultMap>
    <sql id="allField">
        id,
        goods_name,
        goods_type,
        cook_id,
        price,
        discount,
        goods_limit,
        image,
        goods_num,
        goods_describe,
        add_time,
        update_time
    </sql>

    <insert id="insertGoods" parameterType="map">
        insert into goods
        (goods_name,
        goods_type,
        cook_id,
        price,
        discount,
        goods_limit,
        image,
        goods_num,goods_describe,add_time,update_time)
        values
        (#{goods.name},#{goods.type},#{goods.cookId},#{goods.price},#{goods.discount},#{goods.limit},#{goods.image},#{goods.goodsNum},#{goods.describe},now(),now())
    </insert>

    <update id="updateGoodsById">
        update goods
        <set>
            <if test="goods.name!=null and goods.name!=''">
                goods_name=#{goods.name},
            </if>
            <if test="goods.type!=null and goods.type!=''">
                goods_type=#{goods.type},
            </if>
            <if test="goods.cookId!=null and goods.cookId!=''">
                cook_id=#{goods.cookId},
            </if>
            <if test="goods.price!=null">
                price=#{goods.price},
            </if>
            <if test="goods.discount!=null">
                discount=#{goods.discount},
            </if>
            <if test="goods.limit!=null">
                goods_limit=#{goods.limit},
            </if>
            <if test="goods.image!=null and goods.image!=''">
                image=#{goods.image},
            </if>
            <if test="goods.goodsNum!=null and goods.goodsNum!=''">
                goods_num=#{goods.goodsNum},
            </if>
            <if test="goods.describe!=null and goods.describe!=''">
                goods_describe=#{goods.describe},
            </if>
            update_time=now()
        </set>
        where id=#{goods.id}
    </update>

    <update id="reduceGoodsNumById">
        update goods
        set goods_num=goods_num-#{num},
        update_time=now()
        where id=#{id} and goods_num>=#{num}
    </update>

    <delete id="deleteGoodsById">
        delete
        from goods
        where id=#{id}
    </delete>

    <delete id="deleteGoodsByCookId">
        delete
        from goods
        where cook_id=#{cookId}
    </delete>

    <select id="selectGoodsByCookIds" resultMap="Goods">
        select
        <include refid="allField"/>
        from goods
        WHERE cook_id IN
        <foreach collection="cookIds" separator="," open="(" close=")" item="cookId">
            #{cookId}
        </foreach>
        and goods_num &gt; 0
    </select>

    <select id="selectGoodsByCookId" resultMap="Goods">
        select
        <include refid="allField"/>
        from goods
        WHERE cook_id = #{cookId}
    </select>

    <select id="selectGoodsByName" resultMap="Goods">
        select
        <include refid="allField"/>
        from goods
        WHERE goods_name like '%${name}%'
    </select>

    <select id="selectGoodsById" resultMap="Goods">
        select
        <include refid="allField"/>
        from goods
        where id=#{id}
    </select>

    <select id="searchGoods" parameterType="int" resultMap="Goods">
        select
        <include refid="allField"/>
        FROM goods
        WHERE 1=1
        <if test="goodName != null">
            AND goods_name LIKE CONCAT(CONCAT('%',#{goodName}),'%')
        </if>
        <if test="goodType != null">
            AND goods_type = #{goodType}
        </if>
        <if test="discount != null">
            AND discount &lt; #{discount}
        </if>
    </select>

    <select id="selectByPrice" parameterType="map" resultMap="Goods">
        SELECT
        <include refid="allField"/>
        FROM goods
        WHERE #{startPrice} &lt; price AND price &lt; #{endPrice}
    </select>
</mapper>